%ignore /[ \t\n\r]+/

%ignore "\\," | "\\thinspace"
%ignore "\\:" | "\\medspace"
%ignore "\\;" | "\\thickspace"
%ignore "\\quad"
%ignore "\\qquad"
%ignore "\\!" | "\\negthinspace"
%ignore "\\negmedspace"
%ignore "\\negthickspace"

///////////////////// tokens ///////////////////////

ADD: "+"
SUB: "-"
MUL: "*"
DIV: "/"

L_PAREN: "("
R_PAREN: ")"
L_BRACE: "{"
R_BRACE: "}"
L_BRACE_LITERAL: "\\{"
R_BRACE_LITERAL: "\\}"
L_BRACKET: "["
R_BRACKET: "]"

L_LEFT: "\\left"
R_RIGHT: "\\right"

BAR: "|"

FUNC_LIM:  "\\lim"
LIM_APPROACH_SYM: "\\to" | "\\rightarrow" | "\\Rightarrow" | "\\longrightarrow" | "\\Longrightarrow"
FUNC_INT:  "\\int"
FUNC_SUM:  "\\sum"
FUNC_PROD: "\\prod"

FUNC_EXP:  "\\exp"
FUNC_LOG:  "\\log"
FUNC_LN:   "\\ln"
FUNC_SIN:  "\\sin"
FUNC_COS:  "\\cos"
FUNC_TAN:  "\\tan"
FUNC_CSC:  "\\csc"
FUNC_SEC:  "\\sec"
FUNC_COT:  "\\cot"

FUNC_ARCSIN: "\\arcsin"
FUNC_ARCCOS: "\\arccos"
FUNC_ARCTAN: "\\arctan"
FUNC_ARCCSC: "\\arccsc"
FUNC_ARCSEC: "\\arcsec"
FUNC_ARCCOT: "\\arccot"

FUNC_SINH: "\\sinh"
FUNC_COSH: "\\cosh"
FUNC_TANH: "\\tanh"
FUNC_ARSINH: "\\arsinh"
FUNC_ARCOSH: "\\arcosh"
FUNC_ARTANH: "\\artanh"

FUNC_SQRT: "\\sqrt"

CMD_TIMES: "\\times"
CMD_CDOT:  "\\cdot"
CMD_DIV:   "\\div"
CMD_FRAC:  "\\frac"
CMD_BINOM: "\\binom"
CMD_DBINOM: "\\dbinom"
CMD_TBINOM: "\\tbinom"

CMD_MATHIT: /\\mathit\{[A-Za-z ]+\}/

UNDERSCORE: "_"
CARET: "^"
COLON: ":"
BANG: "!"

EQUAL: "="
LT: "<"
LTE: "\\leq"
GT: ">"
GTE: "\\geq"

DIFFERENTIAL: /d[ \t\r\n]*?([a-zA-Z]|\\[a-zA-Z]+)/
LETTER: /[A-Za-z]/
SYMBOL: /\\[a-zA-Z]+/
INTEGER: /\d+/
FLOAT: /\d+\.\d*|\.\d+/


//////////////////// grammar //////////////////////

?start: relation

relation: relation (EQUAL | LT | LTE | GT | GTE) relation
        | expr

?expr: binary_op_1

?binary_op_1: binary_op_2 ((ADD | SUB) binary_op_2)*

?binary_op_2: binary_op_3 ((MUL | CMD_TIMES | CMD_CDOT | DIV | CMD_DIV | COLON) binary_op_3)*

?binary_op_3: unary_op sup_expression
            | unary_op

?unary_op: (ADD | SUB) implicit_mul
         | implicit_mul BANG
         | implicit_mul

?implicit_mul: part+

?part: atom
     | group
     | abs_group

?group: L_PAREN expr R_PAREN
      | L_LEFT L_PAREN expr R_RIGHT R_PAREN
      | L_BRACKET expr R_BRACKET
      | L_LEFT L_BRACKET expr R_RIGHT R_BRACKET
      | L_BRACE expr R_BRACE
      | L_LEFT L_BRACE expr R_RIGHT R_BRACE
      | L_BRACE_LITERAL expr R_BRACE_LITERAL
      | L_LEFT L_BRACE_LITERAL expr R_RIGHT R_BRACE_LITERAL

?abs_group: BAR expr BAR
          | L_LEFT BAR expr R_RIGHT BAR

?sub_expression: UNDERSCORE (atom | L_BRACE expr R_BRACE)
?sup_expression: CARET (atom | L_BRACE expr R_BRACE)

?atom: LETTER
     | SYMBOL
     | INTEGER
     | FLOAT
     | DIFFERENTIAL
     | CMD_MATHIT
