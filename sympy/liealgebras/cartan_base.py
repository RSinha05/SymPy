from sympy.core import Basic
from sympy.core.backend import zeros, Matrix

class Standard_Cartan(Basic):
    """
    Semi-Concrete base class for Cartan types such as A4, etc
    """

    def __new__(cls, series, n):
        obj = Basic.__new__(cls, series, n)
        obj.n = n
        obj.series = series
        return obj

    def rank(self):
        """
        Returns the rank of the Lie algebra
        """
        return self.n

    def series(self):
        """
        Returns the type of the Lie algebra
        """
        return self.series

    def cartan_matrix(self):
        """
        Returns the Cartan Matrix for the algebra. For a 
        given simple Lie algabra the elements `a_ij` can be 
        generated by

        a_ji = 2 <a_i, a_j> / <a_j, a_j>

        where a_i is the i'th simple root and <,> is the scalar product.
        """
        r = self.rank()
        cartan_matrix = zeros(r,r)
        for i, sr_i in enumerate(self.simple_roots()):
            for j, sr_j in enumerate(self.simple_roots()):
                cartan_matrix[j,i] = 2 * sr_i.dot(sr_j) / sr_i.dot(sr_i)
        return cartan_matrix

    def cocartan_matrix(self):
        """
        Returns the Cocartan matrix. The Cocartan matrix 
        row elements, c_i, are built from covectors of simple roots, a_i.

        c_i = 2 a_i / <a_i, a_i>

        This relationship is helpful in defining the orthogonal base where
        multiplying by some weight, w_j, yields the unit matrix.

        <c_i, w_j> = KroneckerDelta[i,j].
        """
        return Matrix([
                2 * x / x.dot(x) for x in self.simple_roots()])

    def omega_matrix(self):
        """
        Returns the omega matrix, which rows are built from 
        the fundamental weights of the algebra in the orthogonal
        basis.
        """
        return self.cocartan_matrix().pinv().T

    def simple_root(self, i):
        """
        Returns the i'th simple root in the orthogonal basis.
        """
        pass

    def simple_roots(self):
        """
        Returns the simple roots of the algebra.
        """
        return [Matrix(self.simple_root(i+1)).T for i in range(self.n)]

    
