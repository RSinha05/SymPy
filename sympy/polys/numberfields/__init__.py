"""Computational algebraic field theory. """

__all__ = [
    'minpoly', 'minimal_polynomial', 'primitive_element',

    'field_isomorphism',

    'to_number_field', 'isolate',
]

# Before `sympy.polys.numberfields` was a package, it was a module, containing
# what is now defined in the `minpoly`, `isomorphism` and `numbers` modules.
# To maintain backwards compatibility, we have to import everything that was
# available in the old `sympy.polys.numberfields` module.
# The lists below may contain some (harmless) redundancies between them, since
# each was automatically generated by scanning the module.
from .minpoly import (
    reduce, S, Rational, GoldenRatio,
    TribonacciConstant, Add, Mul, sympify, Dummy, expand_mul, I, pi, sqrt,
    cbrt, Factors, _mexpand, exp, cos, sin, tan, divisors, subsets,
    dup_eval, ZZ, QQ, dup_chebyshevt, NotAlgebraic, GeneratorsError, Poly,
    PurePoly, invert, factor_list, groebner, resultant, degree,
    poly_from_expr, parallel_poly_from_expr, lcm, dict_from_expr,
    expr_from_dict, rs_compose_add, ring, CRootOf, cyclotomic_poly,
    _split_gcd, _is_sum_surds, numbered_symbols, public, sift,
    _choose_factor, _separate_sq, _minimal_polynomial_sq,
    _minpoly_op_algebraic_element, _invertx, _muly, _minpoly_pow,
    _minpoly_add, _minpoly_mul, _minpoly_sin, _minpoly_cos, _minpoly_tan,
    _minpoly_exp, _minpoly_rootof, _minpoly_compose,
    minimal_polynomial, _minpoly_groebner, minpoly, _switch_domain,
    _linsolve, primitive_element
)
from .isomorphism import (
    S, AlgebraicNumber, Add, sympify, sieve,
    Poly, factor_list, public, pslq, mp,
    is_isomorphism_possible, field_isomorphism_pslq, field_isomorphism_factor,
    field_isomorphism,
)
from .numbers import (
    AlgebraicNumber, sympify, field_isomorphism,
    minpoly, primitive_element, IsomorphismFailed, LambdaPrinter,
    PythonCodePrinter, MpmathPrinter, lambdify, public, mp,
    to_number_field, IntervalPrinter, isolate
)
